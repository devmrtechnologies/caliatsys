!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("amazon-cognito-identity-js"),require("aws-sdk")):"function"==typeof define&&define.amd?define("@caliatys/cognito-service",["exports","@angular/core","amazon-cognito-identity-js","aws-sdk"],t):t((e.caliatys=e.caliatys||{},e.caliatys["cognito-service"]={}),e.ng.core,e.AWSCognito,e.AWS)}(this,function(e,t,c,s){"use strict";var u=function r(e,t){this.type=e,this.data=t},g={COGNITO:"cognito",GOOGLE:"google",FACEBOOK:"facebook"},l={ON_SUCCESS:"onSuccess",ON_FAILURE:"onFailure",ON_ERROR:"onError",ON_TIMEOUT:"onTimeout",ON_REJECTED:"onRejected",NEW_PASSWORD_REQUIRED:"newPasswordRequired",INPUT_VERIFICATION_CODE:"inputVerificationCode",MFA_REQUIRED:"mfaRequired",MFA_SETUP_ASSOCIATE_SECRETE_CODE:"mfaSetup associateSecretCode",MFA_SETUP_ON_FAILURE:"mfaSetup onFailure",EXPIRED_TOKEN:"expiredToken"},i={AUTHENTICATE:"authenticate",REFRESH:"refresh",LOGOUT:"logout"},o=function(){function e(e){this.cognitoConst=e,this.poolData={UserPoolId:null,ClientId:null},this.onSignIn=new t.EventEmitter,this.onSignOut=new t.EventEmitter,this.storagePrefix=e.storagePrefix+"_CognitoService_",this.googleId=e.googleId,this.googleScope=e.googleScope,this.poolData.UserPoolId=e.poolData.UserPoolId,this.poolData.ClientId=e.poolData.ClientId,this.identityPool=e.identityPool,this.region=e.region,this.adminAccessKeyId=e.adminAccessKeyId,this.adminSecretKeyId=e.adminSecretKeyId}return e.prototype.isAuthenticated=function(){return!!this.getRemaining()},e.prototype.sts=function(){return new Promise(function(o,r){(new s.STS).getCallerIdentity(null,function(e,t){return t?o(t):(console.error("CognitoService : sts -> getCallerIdentity",e),r(e))})})},e.prototype.autoRefreshSession=function(){var t=this,e=this.getExpiresAt();if(e){var o=e.getTime()-Date.now()-6e4;o<0?this.signOut():setTimeout(function(){t.refreshSession().then(function(e){t.autoRefreshSession()})["catch"](function(e){t.signOut()})},o)}},e.prototype.getRemaining=function(){var e,t,o=null;return t=Date.now(),(o=this.getExpiresAt())?(e=o.getTime()-t)<=0?null:e:null},e.prototype.getExpiresAt=function(){var e,t,o=null,r=null;return e=this.storagePrefix+"ExpiresAt",(t=localStorage.getItem(e))&&(o=Number(t))&&(r=new Date(o)),r},e.prototype.getUsername=function(){var e;return e=this.storagePrefix+"Username",localStorage.getItem(e)},e.prototype.getProvider=function(){var e;return e=this.storagePrefix+"Provider",localStorage.getItem(e)},e.prototype.getIdToken=function(){var e;return e=this.storagePrefix+"IdToken",localStorage.getItem(e)},e.prototype.getTokens=function(){var e,t;return e=this.storagePrefix+"SessionTokens",t=localStorage.getItem(e),JSON.parse(t)},e.prototype.initCredentials=function(){s.config.credentials=new s.CognitoIdentityCredentials({IdentityPoolId:this.identityPool}),s.config.region=this.region},e.prototype.getCredentials=function(){return new Promise(function(t,o){var e=s.config.credentials;if(!e){var r="You must initialize the credentials with initCredentials()";return console.error("CognitoService : getCredentials",r),o(r)}e.get(function(e){return e?(console.error("CognitoService : getCredentials",e),o(e)):t(s.config.credentials)})})},e.prototype.updateCredentials=function(e){var t,o,r=null;switch(t=this.getProvider(),o=this.getIdToken(),t){case g.COGNITO:r="cognito-idp."+this.region.toLowerCase()+".amazonaws.com/"+this.poolData.UserPoolId;break;case g.GOOGLE:r="accounts.google.com";break;default:return void console.error("CognitoService : setCredentials -> Provider not recognized")}var n={};if(n[r]=o,this.identityPool){var i={IdentityPoolId:this.identityPool,Logins:n};s.config.region=this.region,s.config.credentials=new s.CognitoIdentityCredentials(i,e)}else console.info("We recommend that you provide an identity pool ID from a federated identity")},e.prototype.getCognitoUser=function(e){if(void 0===e&&(e=null),this.cognitoUser)return this.cognitoUser;var t=null;if(!(t=new c.CognitoUserPool(this.poolData).getCurrentUser())){var o=null;o=e||this.getUsername(),t=this.setCognitoUser(o)}return t},e.prototype.getUserAttributes=function(){this.getCognitoUser().getUserAttributes(function(e,t){if(t)return t;console.error("CognitoService : getUserAttributes -> getUserAttributes",e)})},e.prototype.deleteAttributes=function(e){this.getCognitoUser().deleteAttributes(e,function(e,t){if(t)return t;console.error("CognitoService : deleteAttributes -> deleteAttributes",e)})},e.prototype.getUserData=function(){this.getCognitoUser().getUserData(function(e,t){if(t)return t;console.error("CognitoService : getUserData -> getUserData",e)})},e.prototype.deleteUser=function(){this.getCognitoUser().deleteUser(function(e,t){if(t)return t;console.error("CognitoService : deleteUser -> deleteUser",e)})},e.prototype.signUp=function(s,e,t,o){var a=this;void 0===t&&(t=[]),void 0===o&&(o=[]);var r=new c.CognitoUserPool(this.poolData);return new Promise(function(n,i){r.signUp(s,e,t,o,function(e,t){if(t){a.setUsername(s);var o=new u(l.ON_SUCCESS,t);return n(o)}console.error("CognitoService : signUp -> signUp",e);var r=new u(l.ON_FAILURE,e);return i(r)})})},e.prototype.confirmRegistration=function(e,t){void 0===t&&(t=!1);var o=this.getCognitoUser();return new Promise(function(n,i){o.confirmRegistration(e,t,function(e,t){if(t){var o=new u(l.ON_SUCCESS,t);return n(o)}console.error("CognitoService : confirmRegistration -> confirmRegistration",e);var r=new u(l.ON_FAILURE,e);return i(r)})})},e.prototype.resendConfirmationCode=function(){var e=this.getCognitoUser();return new Promise(function(n,i){e.resendConfirmationCode(function(e,t){if(t){var o=new u(l.ON_SUCCESS,t);return n(o)}console.error("CognitoService : resendConfirmationCode -> resendConfirmationCode",e);var r=new u(l.ON_FAILURE,e);return i(r)})})},e.prototype.sendMFACode=function(e,t){var n=this;void 0===t&&(t=null);var i=this.getCognitoUser();return new Promise(function(o,r){i.sendMFACode(e,{onSuccess:function(e){n.setUsername(i.getUsername()),n.updateTokens(e),n.setProvider(g.COGNITO),n.updateCredentials(),n.onSignIn.emit();var t=new u(l.ON_SUCCESS,e);return o(t)},onFailure:function(e){console.error("CognitoService : sendMFACode -> sendMFACode",e);var t=new u(l.ON_FAILURE,e);return r(t)}},t)})},e.prototype.getMFAOptions=function(){var e=this.getCognitoUser();return new Promise(function(n,i){e.getMFAOptions(function(e,t){if(t){var o=new u(l.ON_SUCCESS,t);return n(o)}console.error("CognitoService : getMFAOptions -> getMFAOptions",e);var r=new u(l.ON_FAILURE,e);return i(r)})})},e.prototype.setMfa=function(e){var t=this.getCognitoUser();return new Promise(function(n,i){e?t.enableMFA(function(e,t){if(t){var o=new u(l.ON_SUCCESS,t);return n(o)}console.error("CognitoService : setMfa -> enableMFA",e);var r=new u(l.ON_FAILURE,e);return i(r)}):t.disableMFA(function(e,t){if(t){var o=new u(l.ON_SUCCESS,t);return n(o)}console.error("CognitoService : setMfa -> disableMFA",e);var r=new u(l.ON_FAILURE,e);return i(r)})})},e.prototype.newPasswordRequired=function(e,t){var n=this;void 0===t&&(t={});var i=this.getCognitoUser();return new Promise(function(r,o){i.completeNewPasswordChallenge(e,t,{onSuccess:function(e){n.updateTokens(e);var t=new u(l.ON_SUCCESS,e);return r(t)},onFailure:function(e){console.error("CognitoService : newPasswordRequired -> completeNewPasswordChallenge",e);var t=new u(l.ON_FAILURE,e);return o(t)},mfaRequired:function(e,t){var o=new u(l.MFA_REQUIRED,{challengeName:e,challengeParameters:t});return r(o)}})})},e.prototype.forgotPassword=function(e){var t=this.setCognitoUser(e);return new Promise(function(o,r){t.forgotPassword({onSuccess:function(e){var t=new u(l.ON_SUCCESS,e);return o(t)},onFailure:function(e){console.error("CognitoService : forgotPassword -> forgotPassword",e);var t=new u(l.ON_FAILURE,e);return r(t)},inputVerificationCode:function(e){var t=new u(l.INPUT_VERIFICATION_CODE,e);return o(t)}})})},e.prototype.getAttributeVerificationCode=function(){var e=this.getCognitoUser();return new Promise(function(o,r){e.getAttributeVerificationCode(null,{onSuccess:function(){var e=new u(l.ON_SUCCESS,null);return o(e)},onFailure:function(e){console.error("CognitoService : getAttributeVerificationCode -> getAttributeVerificationCode",e);var t=new u(l.ON_FAILURE,e);return r(t)},inputVerificationCode:function(e){var t=new u(l.INPUT_VERIFICATION_CODE,e);return o(t)}})})},e.prototype.confirmPassword=function(e,r){var n=this.getCognitoUser();return new Promise(function(t,o){n.confirmPassword(r,e,{onSuccess:function(){var e=new u(l.ON_SUCCESS,null);return t(e)},onFailure:function(e){console.error("CognitoService : confirmPassword -> confirmPassword",e);var t=new u(l.ON_FAILURE,e);return o(t)}})})},e.prototype.changePassword=function(e,t){var o=this.getCognitoUser();return new Promise(function(n,i){o.changePassword(e,t,function(e,t){if(t){var o=new u(l.ON_SUCCESS,t);return n(o)}console.error("CognitoService : changePassword -> changePassword",e);var r=new u(l.ON_FAILURE,e);return i(r)})})},e.prototype.adminCreateUser=function(e,t){this.setAdmin();var n={UserPoolId:this.poolData.UserPoolId,Username:e,TemporaryPassword:t},i=new s.CognitoIdentityServiceProvider;return new Promise(function(o,r){i.adminCreateUser(n,function(e,t){return t?o(t):(console.error("CognitoService : adminCreateUser -> adminCreateUser",e),r(e))})})},e.prototype.adminDeleteUser=function(e){this.setAdmin();var t={UserPoolId:this.poolData.UserPoolId,Username:e},n=new s.CognitoIdentityServiceProvider;return new Promise(function(o,r){n.adminDeleteUser(t,function(e,t){return t?o(t):(console.error("CognitoService : adminDeleteUser -> adminDeleteUser",e),r(e))})})},e.prototype.adminResetUserPassword=function(e){this.setAdmin();var t={UserPoolId:this.poolData.UserPoolId,Username:e},n=new s.CognitoIdentityServiceProvider;return new Promise(function(o,r){n.adminResetUserPassword(t,function(e,t){return t?o(t):(console.error("CognitoService : adminResetUserPassword -> adminResetUserPassword",e),r(e))})})},e.prototype.adminUpdateUserAttributes=function(e,t){this.setAdmin();var n={UserPoolId:this.poolData.UserPoolId,Username:e,UserAttributes:t},i=new s.CognitoIdentityServiceProvider;return new Promise(function(o,r){i.adminUpdateUserAttributes(n,function(e,t){return t?o(t):(console.error("CognitoService : adminUpdateUserAttributes -> adminUpdateUserAttributes",e),r(e))})})},e.prototype.resetExpiredAccount=function(e,t){var o=[];return o.push({Name:e,Value:t}),this.adminUpdateUserAttributes(t,o)},e.prototype.setAdmin=function(){var e=new s.Credentials(this.adminAccessKeyId,this.adminSecretKeyId);s.config.region=this.region,s.config.credentials=e},e.prototype.signIn=function(e,t,o){switch(e){case g.COGNITO:return this.authenticateCognitoUser(t,o);case g.GOOGLE:return this.callGoogle(i.AUTHENTICATE);default:var r="Provider not recognized : use the AuthType enum to send an authorized authentication provider";console.error(r);var n=new u(l.ON_FAILURE,r);return Promise.reject(n)}},e.prototype.refreshSession=function(){switch(this.getProvider()){case g.COGNITO:return this.refreshCognitoSession();case g.GOOGLE:return this.callGoogle(i.REFRESH);default:var e="Provider not recognized : the user must be logged in before updating the session";console.error(e);var t=new u(l.ON_FAILURE,e);return Promise.reject(t)}},e.prototype.signOut=function(){switch(this.getProvider()){case g.COGNITO:this.signOutCognito();break;case g.GOOGLE:this.callGoogle(i.LOGOUT);break;default:console.error("Provider not recognized : the user must be logged in before logging out")}this.onSignOut.emit(),this.clearStorage()},e.prototype.authenticateCognitoUser=function(n,e){var i=this,t={Username:n,Password:e},s=new c.AuthenticationDetails(t),a=this.getCognitoUser(n);return new Promise(function(r,o){a.authenticateUser(s,{newPasswordRequired:function(e,t){i.cognitoUser=a;var o=new u(l.NEW_PASSWORD_REQUIRED,{userAttributes:e,requiredAttributes:t});return r(o)},onSuccess:function(e){i.setUsername(n),i.updateTokens(e),i.setProvider(g.COGNITO),i.updateCredentials(),i.onSignIn.emit();var t=new u(l.ON_SUCCESS,e);return r(t)},onFailure:function(e){console.error("CognitoService : authenticateCognitoUser -> authenticateUser",e);var t=new u(l.ON_FAILURE,e);return o(t)},mfaSetup:function(e,t){a.associateSoftwareToken({associateSecretCode:function(e){var t=new u(l.MFA_SETUP_ASSOCIATE_SECRETE_CODE,e);return r(t)},onFailure:function(e){var t=new u(l.MFA_SETUP_ON_FAILURE,e);return o(t)}})},mfaRequired:function(e,t){var o=new u(l.MFA_REQUIRED,{challengeName:e,challengeParameters:t});return r(o)}})})},e.prototype.refreshCognitoSession=function(){var s=this,e=this.getTokens(),t=this.getCognitoUser(),o=new c.CognitoRefreshToken({RefreshToken:e.refreshToken});return new Promise(function(n,i){t.refreshSession(o,function(e,t){if(t){s.updateTokens(t),s.updateCredentials();var o=new u(l.ON_SUCCESS,t);return n(o)}console.error("CognitoService : refreshSession -> refreshSession",e);var r=new u(l.ON_FAILURE,e);return i(r)})})},e.prototype.signOutCognito=function(){var e=this.getCognitoUser();e&&e.signOut()},e.prototype.initGoogle=function(){var n=this,t={client_id:this.googleId,scope:this.googleScope};return new Promise(function(o,r){gapi.load("auth2",{callback:function(e){gapi.auth2.init(t).then(function(e){n.googleAuth=e;var t=new u(l.ON_SUCCESS,e);return o(t)},function(e){console.error("CognitoService : initGoogle -> GoogleAuth",e);var t=new u(l.ON_FAILURE,e);return r(t)})},onerror:function(e){var t="gapi.client failed to load";console.error("CognitoService : initGoogle -> load",t);var o=new u(l.ON_ERROR,t);return r(o)},timeout:5e3,ontimeout:function(e){var t="gapi.client could not load in a timely manner";console.error("CognitoService : initGoogle -> load",t);var o=new u(l.ON_TIMEOUT,t);return r(o)}})})},e.prototype.callGoogle=function(r){var n=this;return this.googleAuth?this.makeGoogle(r):new Promise(function(t,o){n.initGoogle().then(function(e){n.makeGoogle(r).then(function(e){return t(e)})["catch"](function(e){return o(e)})})["catch"](function(e){var t=new u(l.ON_FAILURE,e);return Promise.reject(t)})})},e.prototype.makeGoogle=function(e){switch(e){case i.AUTHENTICATE:return this.authenticateGoogleUser();case i.REFRESH:return this.refreshGoogleSession();case i.LOGOUT:this.signOutGoogle();var t=new u(l.ON_SUCCESS,null);return Promise.resolve(t);default:var o="Google action not recognized : authenticate / refresh / logout";console.error(o);var r=new u(l.ON_FAILURE,o);return Promise.reject(r)}},e.prototype.authenticateGoogleUser=function(){var i=this;return new Promise(function(n,o){var e={scope:i.googleScope};i.googleAuth.signIn(e).then(function(e){var t=e.getAuthResponse(),o=e.getBasicProfile();i.setUsername(o.getName()),i.setIdToken(t.id_token),i.setExpiresAt(t.expires_at),i.setProvider(g.GOOGLE),i.updateCredentials(),i.onSignIn.emit();var r=new u(l.ON_SUCCESS,o);return n(r)},function(e){console.error("CognitoService : authenticateGoogleUser -> signIn",e);var t=new u(l.ON_REJECTED,e);return o(t)})["catch"](function(e){console.error("CognitoService : authenticateGoogleUser -> signIn",e);var t=new u(l.ON_FAILURE,e);return o(t)})})},e.prototype.refreshGoogleSession=function(){var n=this,e=null;return e=this.googleAuth.currentUser.get(),new Promise(function(o,r){e.reloadAuthResponse().then(function(e){n.setIdToken(e.id_token),n.setExpiresAt(e.expires_at),n.updateCredentials();var t=new u(l.ON_SUCCESS,e);return o(t)})["catch"](function(e){console.error("CognitoService : refreshGoogleSession -> reloadAuthResponse",e);var t=new u(l.ON_FAILURE,e);return r(t)})})},e.prototype.signOutGoogle=function(){var t=this;this.googleAuth.signOut().then(function(e){t.googleAuth.disconnect()})},e.prototype.setCognitoUser=function(e){var t,o={Username:e,Pool:new c.CognitoUserPool(this.poolData)};return t=new c.CognitoUser(o),this.cognitoUser=t,this.setUsername(e),t},e.prototype.setExpiresAt=function(e){var t;t=this.storagePrefix+"ExpiresAt",localStorage.setItem(t,e.toString())},e.prototype.setUsername=function(e){var t;t=this.storagePrefix+"Username",localStorage.setItem(t,e)},e.prototype.setProvider=function(e){var t;t=this.storagePrefix+"Provider",localStorage.setItem(t,e)},e.prototype.setIdToken=function(e){var t;t=this.storagePrefix+"IdToken",localStorage.setItem(t,e)},e.prototype.setTokens=function(e){var t,o,r;t=this.storagePrefix+"SessionTokens",r={accessToken:e.getAccessToken().getJwtToken(),accessTokenExpiresAt:1e3*e.getAccessToken().getExpiration(),idToken:e.getIdToken().getJwtToken(),idTokenExpiresAt:1e3*e.getIdToken().getExpiration(),refreshToken:e.getRefreshToken().getToken()},o=JSON.stringify(r),localStorage.setItem(t,o)},e.prototype.updateTokens=function(e){var t;this.setTokens(e),t=this.getTokens(),this.setIdToken(t.idToken),this.setExpiresAt(t.idTokenExpiresAt)},e.prototype.clearStorage=function(){localStorage.removeItem(this.storagePrefix+"Username"),localStorage.removeItem(this.storagePrefix+"Provider"),localStorage.removeItem(this.storagePrefix+"IdToken"),localStorage.removeItem(this.storagePrefix+"ExpiresAt"),localStorage.removeItem(this.storagePrefix+"SessionTokens")},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:t.Inject,args:["cognitoConst"]},{type:t.Optional}]}]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e(t.inject("cognitoConst",8))},token:e,providedIn:"root"}),e}();e.CognitoServiceResponse=u,e.AuthType=g,e.RespType=l,e.GoogleAction=i,e.CognitoService=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=caliatys-cognito-service.umd.min.js.map